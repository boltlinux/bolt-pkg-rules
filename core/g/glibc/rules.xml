<?xml version="1.0" encoding="utf-8"?>
<rules>
    <prepare>
    <![CDATA[

cd "$BOLT_SOURCE_DIR"

# Make sure that ld is invoked from /usr/lib.
case "$BOLT_BUILD_FOR" in
    target)
        grep -rl '"[^"]*/lib\(32\|64\)\?/ld' * | while read filename; do
            sed -i 's@"[^"]*/lib\(32\|64\)\?/ld@"/usr/lib/ld@g' "$filename"
        done
        ;;
    tools)
        ;;
esac

rm -fr .build && mkdir -p .build

(
    set -e
    cd .build

    ../configure \
        --prefix="$BOLT_INSTALL_PREFIX" \
        --with-headers="$BOLT_INSTALL_PREFIX/include" \
        --build="$BOLT_BUILD_TYPE" \
        --host="$BOLT_HOST_TYPE" \
        --disable-profile \
        --disable-werror \
        --enable-stackguard-randomization \
        --enable-stack-protector=strong \
        --without-gd \
        --without-cvs \
        --enable-add-ons \
        libc_cv_slibdir="$BOLT_INSTALL_PREFIX/lib"

    # Cheat our way around building the manual (which is not there).
    cat << EOF >> ../manual/empty-script.sh
#!/bin/sh
true
EOF
    chmod +x ../manual/empty-script.sh

    ln -sf empty-script.sh ../manual/libc-texinfo.sh
    ln -sf empty-script.sh ../manual/libm-err-tab.pl
    ln -sf empty-script.sh ../manual/xtract-typefun.awk

    touch ../manual/libc.texinfo
    touch ../manual/libc.info
)

    ]]>
    </prepare>

    <build>
    <![CDATA[

cd "$BOLT_SOURCE_DIR/.build"
make -j"$BOLT_PARALLEL_JOBS"

    ]]>
    </build>

    <install>
    <![CDATA[

cd "$BOLT_SOURCE_DIR/.build"
make DESTDIR="$BOLT_INSTALL_DIR" install

    ]]>
    </install>
</rules>
