<?xml version="1.0" encoding="utf-8"?>
<rules>
    <prepare>
    <![CDATA[

cd "$BOLT_SOURCE_DIR"
./autogen.sh

cd "$BOLT_BUILD_DIR"
mkdir .mybin
ln -sf "$BOLT_INSTALL_PREFIX/bin/${BOLT_HOST_TYPE}-pkg-config" .mybin/pkg-config
export PATH="`pwd`/.mybin:$PATH"

# trigger a cross build and use guile from /tools if available
if [ "$BOLT_BUILD_FOR" = "tools" ] && [ -e "/tools/bin/guile" ]; then
    export GUILE_FOR_BUILD="/tools/bin/guile"
    MY_BUILD_TYPE="`bh_spoof_target_triplet $BOLT_HOST_TYPE`"
    export CC_FOR_BUILD="${BOLT_HOST_TYPE}-gcc"
else
    MY_BUILD_TYPE="$BOLT_HOST_TYPE"
fi

"$BOLT_SOURCE_DIR/configure" \
    --prefix="$BOLT_INSTALL_PREFIX" \
    --build="$MY_BUILD_TYPE" \
    --host="$BOLT_HOST_TYPE" \
    --disable-nls \
    --disable-error-on-warning \
    --disable-rpath \
    --disable-silent-rules \
    ac_cv_libunistring=yes \
    ac_cv_libunistring_with_iconv_support=yes \
    ac_cv_func_GC_set_finalizer_notifier=yes \
    ac_cv_func_GC_get_heap_usage_safe=yes \
    ac_cv_func_GC_get_free_space_divisor=yes \
    ac_cv_func_GC_set_finalize_on_demand=yes

    ]]>
    </prepare>

    <build>
    <![CDATA[

cd "$BOLT_BUILD_DIR"
export PATH="`pwd`/.mybin:$PATH"
make -j"$BOLT_PARALLEL_JOBS"

    ]]>
    </build>

    <install>
    <![CDATA[

cd "$BOLT_BUILD_DIR"
make DESTDIR="$BOLT_INSTALL_DIR" INSTALL='install -p' install

    ]]>
    </install>
</rules>
